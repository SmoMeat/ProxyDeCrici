#user nobody; # a directive in the 'main' context

events {
    # configuration of connection processing
}

http {
    # Configuration specific to HTTP and affecting all virtual servers  
    upstream grafana {
        server grafana:3000;
    }
    # upstream prometheus {
    #     server prometheus:9090;
    # }

    server {
        listen 443 ssl;
        server_name progression.ranger.quest;
        ssl_certificate /etc/nginx/cert/fullchain.pem;
        ssl_certificate_key /etc/nginx/cert/privkey.pem;
        # configuration of HTTP virtual server 1  
        location /grafana {
            proxy_set_header Host $http_host;
            proxy_pass http://grafana;
        }
        location /prometheus/ {
            rewrite ^/prometheus(.*)$ $1 break;
            proxy_pass http://prometheus:9090;
        }
    } 

    server {
        listen 80;
        root /usr/share/nginx/html;
        index index.html index.htm;

        location / {
            proxy_set_header Host $http_host;
            proxy_pass http://grafana;
        }
    }
}

# stream {
#     # Configuration specific to TCP/UDP and affecting all virtual servers
#     server {
#         listen 5000;
#         # configuration of TCP virtual server 1 
#     }
# }

# ServerRoot "/usr/local/apache2"
# SSLProxyEngine on
# ServerName progression.ranger.quest
# LoadModule proxy_module modules/mod_proxy.so
# LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
# LoadModule proxy_http_module modules/mod_proxy_http.so
# LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
# LoadModule ssl_module modules/mod_ssl.so
# Include conf/extra/httpd-ssl.conf

# ServerName progression.ranger.quest
# #    Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains;"

#                 #   SSL Engine Switch:
#                 #   Enable/Disable SSL for this virtual host.
#                 #   A self-signed (snakeoil) certificate can be created by installing
#                 #   the ssl-cert package. See
#                 #   /usr/share/doc/apache2/README.Debian.gz for more info.
#                 #   If both key and certificate are stored in the same file, only the
#                 #   SSLCertificateFile directive is needed.
#     # Backend
#     ProxyPass "/api" "http://progression.ranger.quest:9000/"
#     ProxyPassReverse "/api" "http://progression.ranger.quest:9000/"

#     # Frontend

#     # tty-share
# #    ProxyPassMatch ^/s/(.*)/ws$ "!"
#     ProxyPassMatch ^/s/(.*)/ws$ "ws://progression.ranger.quest:8081/s/$1/ws"
#     ProxyPass "/s/" "http://progression.ranger.quest:8081/s/"
#     ProxyPassReverse "/s/" "http://progression.ranger.quest:8081/s/"

#     # Webapp
#     ProxyPass "/" "http://progression.ranger.quest:8000/"
#     ProxyPassReverse "/" "http://progression.ranger.quest:8000/"

#     ProxyPreserveHost On